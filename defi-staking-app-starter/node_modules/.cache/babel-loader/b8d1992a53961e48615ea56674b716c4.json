{"ast":null,"code":"import _regeneratorRuntime from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    // React code goes here\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }() // connecting to Etherium\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  alert('No etherium browser detected! You can checkout Metamask !');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() // Getting the account\n\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                }); // bring the contracts\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //console.log(networkId, 'Network Id')\n                //Load tether contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 20;\n                break;\n\n              case 19:\n                alert('Tether contract not deployed to detected network');\n\n              case 20:\n                // Load the RWD contract\n                rwdData = RWD.networks[networkId];\n\n                if (!rwdData) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 26;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 26:\n                rwdBalance = _context3.sent;\n                console.log({\n                  rwdBalance: rwdBalance\n                });\n                _context3.next = 31;\n                break;\n\n              case 30:\n                alert('RWD contract not deployed to detected network');\n\n              case 31:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","NavBar","Web3","Tether","RWD","DecentralBank","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","console","log","balance","rwdData","rwd","rwdBalance","props","decentralBank","stakingBalance","loading","color"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport NavBar from \"./NavBar\";\nimport Web3 from 'web3'\nimport Tether from '../truffle_abis/Tether.json'\nimport RWD from '../truffle_abis/RWD.json'\nimport DecentralBank from '../truffle_abis/DecentralBank.json'\n\nclass App extends Component{\n    // React code goes here\n    \n\n\n    async UNSAFE_componentWillMount(){\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    // connecting to Etherium\n    async loadWeb3(){\n\n        if(window.ethereum){\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }else if(window.web3){\n            window.web3 = new Web3(window.web3.currentProvider)\n        }else{\n            alert('No etherium browser detected! You can checkout Metamask !');\n        }\n    }\n\n    // Getting the account\n    async loadBlockchainData(){\n\n        const web3 = window.web3\n        const account = await web3.eth.getAccounts()\n        this.setState({account: account[0]})\n        // bring the contracts\n        \n        const networkId = await web3.eth.net.getId()\n        //console.log(networkId, 'Network Id')\n        \n        //Load tether contract\n        const tetherData = Tether.networks[networkId]\n        if(tetherData){\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address)\n            this.setState({tether: tether});\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\n            this.setState({tetherBalance: tetherBalance.toString()})\n            console.log({balance: tetherBalance})\n        }else{\n            alert('Tether contract not deployed to detected network')\n        }\n\n        // Load the RWD contract\n\n        const  rwdData= RWD.networks[networkId]\n        if(rwdData){\n\n            const rwd = new web3.eth.Contract(RWD.abi, rwdData.address)\n            this.setState({rwd: rwd})\n            const rwdBalance = await rwd.methods.balanceOf(this.state.account).call()\n            console.log({rwdBalance: rwdBalance})\n\n        }else{\n            alert('RWD contract not deployed to detected network')\n        }\n\n\n    }\n\n\n    constructor(props){\n        super(props)\n        this.state = {\n            account: '0x0',\n            tether: {},\n            rwd: {},\n            decentralBank: {},\n            tetherBalance: '0',\n            rwdBalance: '0',\n            stakingBalance: '0',\n            loading: true\n        }\n    }\n\n    render(){\n\n        return(\n            <div className=\"text-center\" style={{color:'green'}}>\n                <NavBar account={this.state.account}/>\n            </div>\n            \n        )\n    }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}