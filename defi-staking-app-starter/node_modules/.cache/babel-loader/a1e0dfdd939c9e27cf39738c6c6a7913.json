{"ast":null,"code":"import _regeneratorRuntime from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./NavBar\";\nimport _Web from 'web3';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"Web3\",\n    // React code goes here\n    value: function () {\n      var _Web2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 6;\n                  break;\n                }\n\n                window.web3 = new _Web(window.ethereum);\n                _context.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new _Web(window.web3.currentProvider);\n                } else {\n                  alert('No etherium browser detected! You can checkout Metamask !');\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function Web3() {\n        return _Web2.apply(this, arguments);\n      }\n\n      return Web3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x011111'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/markosavic/Desktop/untitled folder/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","NavBar","Web3","App","window","ethereum","web3","enable","currentProvider","alert","props","state","account","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,G;;;;;AACF;;;;;;;qBAIOC,MAAM,CAACC,Q;;;;;AACND,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACJ,oBAAGH,MAAM,CAACE,IAAV,EAAe;AACjBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACH,iBAFK,MAED;AACDC,kBAAAA,KAAK,CAAC,2DAAD,CAAL;AACH;;;;;;;;;;;;;;;;;;AAGL,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC;AADC,KAAb;AAFc;AAKjB;;;;6BAEO;AAEJ,0BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH;;;;EA9BaZ,S;;AAkClB,eAAeG,GAAf","sourcesContent":["import React, {Component} from \"react\";\nimport NavBar from \"./NavBar\";\nimport Web3 from 'web3'\n\nclass App extends Component{\n    // React code goes here\n    \n    async Web3(){\n\n        if(window.ethereum){\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }else if(window.web3){\n            window.web3 = new Web3(window.web3.currentProvider)\n        }else{\n            alert('No etherium browser detected! You can checkout Metamask !');\n        }\n    }\n\n    constructor(props){\n        super(props)\n        this.state = {\n            account:'0x011111'\n        }\n    }\n\n    render(){\n\n        return(\n            <div className=\"text-center\" style={{color:'green'}}>\n                <NavBar account={this.state.account}/>\n            </div>\n            \n        )\n    }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}